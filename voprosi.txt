●	Что такое переменная в Python, и как её правильно объявлять?
●	В чем различие между списками, кортежами и множествами в Python?
●	Что такое immutable и mutable объекты?
●	Как работает оператор присваивания в Python?
●	Объясните, что такое глобальные и локальные переменные в Python.
●	Как работает оператор = в Python, и чем он отличается от оператора ==?
●	Что такое строковые литералы, как их создавать и какие особенности у разных типов строк (например, многострочные строки)?
●	Какие типы данных существуют в Python? 
●	Как работают индексы в строках и списках в Python?
●	В чем отличие между del и remove при работе со списками?
●	Что такое список (list) в Python, и как добавить элементы в список?
●	Как инициализировать пустой словарь в Python? Как добавить и удалить элементы?
●	Что такое множество (set) и как оно работает в Python?
●	Как инициализировать пустой кортеж, и чем он отличается от списка?
●	Как можно объединить два списка в Python?
●	Что делает оператор in и как его можно использовать с коллекциями?
●	Как работает цикл for в Python? Приведи пример использования с коллекцией.
●	Объясните разницу между for и while циклами в Python.
●	Как работает метод enumerate() в Python?
●	Как использовать цикл while для поиска максимального числа в списке?
●	Как работают условные операторы в Python (if, elif, else)? 
●	Что такое исключения в Python, и как их обрабатывать с помощью try-except?
●	Как можно использовать else в блоке try-except? 
●	В чем отличие между try-except и finally в Python?
●	Что такое raise в Python, и как его использовать для генерации исключений?
●	Как объявить функцию в Python с помощью def?
●	Какие существуют типы аргументов в Python? Что такое аргументы по умолчанию, *args и **kwargs?
●	Чем отличается позиционный аргумент от ключевого?
●	Как вернуть несколько значений из функции в Python?
●	Что такое lambda-функции? 
●	Как работает функция map() в Python?
●	Объясните, как работает декоратор в Python.
●	Что такое замыкания (closures) в Python?
●	Как импортировать модуль в Python?
●	Чем отличается импорт через import и from ... import?
●	Что такое виртуальные окружения в Python, и зачем они нужны?
●	Как создать и использовать свой модуль в Python?
●	Что такое библиотека math и какие функции в ней есть?
●	Как использовать модуль random в Python для генерации случайных чисел?
●	Что такое класс и объект в Python? Приведи пример их использования.
●	Как в Python реализуется наследование и полиморфизм?
●	Что такое инкапсуляция и как она реализована в Python?
●	В чем разница между атрибутами класса и экземпляра?
●	Как в Python реализовать метод, который будет доступен для всех экземпляров класса?
●	Что такое self в методах класса?
●	Объясните принцип работы перегрузки методов в Python.
●	Что такое базы данных, и как Python может взаимодействовать с ними?
●	Как создать подключение к базе данных с помощью библиотеки sqlite3 в Python?
●	Что такое SQL-запрос и какие основные операторы существуют в SQL?
●	Как выполнить SQL-запрос с использованием Python?
●	Как выполнить сортировку данных в SQL-запросе? 
●	Чем отличается JOIN от INNER JOIN в SQL?
●	Как обновить данные в таблице SQL через Python?
●	Что такое REST API, и как Python может взаимодействовать с API?
●	Как работать с библиотекой requests в Python?
●	Как отправить POST-запрос с помощью библиотеки requests?
●	Что такое JSON, и как работать с ним в Python?
●	Объясни, как можно взаимодействовать с API с помощью библиотеки requests.
●	Как парсить HTML-страницы с помощью библиотеки BeautifulSoup?
●	Чем отличается статический и динамический контент на сайте?
●	Как использовать Selenium для автоматизации браузера в Python?
●	Что такое фреймворк Flask, и как создать приложение на Flask?
●	Чем отличаются GET и POST запросы в веб-разработке?
●	Как настроить маршруты и обработчики в Flask?
●	Что такое шаблонизатор в Flask, и как работать с HTML-шаблонами?
●	Как использовать фреймворк Django для создания простого веб-приложения?
●	Что такое ORM (Object-Relational Mapping) и как его использовать в Django?
●	Как в Django работать с моделями и миграциями?
●	Что такое Git, и как начать использовать систему контроля версий?
●	Как клонировать репозиторий с GitHub в локальную папку?
●	Как создать новый коммит в Git и добавить изменения в репозиторий?
●	Что такое ветки в Git, и как их создавать и сливать?
●	Как разрешать конфликты при слиянии веток в Git?
●	Что такое git merge и git rebase, и в чем их отличие?
●	Как отменить изменения в локальном репозитории с помощью git checkout?
●	Что такое git pull и как его использовать для синхронизации с удалённым репозиторием?
●	Что такое виртуальная машина, и как её создать с помощью VirtualBox?
●	Как установить и настроить Linux для разработки Python-приложений?
●	Как деплоить Python-приложение на сервер?
●	Как настроить сервер для работы с Django и Flask?
●	Как создать простое приложение для веб-парсинга с помощью библиотеки BeautifulSoup?
●	Что такое регулярные выражения, и как их использовать для парсинга данных?
●	Как обрабатывать динамический контент на веб-страницах с помощью Selenium?
●	Как сохранять результаты парсинга в CSV или базу данных?
